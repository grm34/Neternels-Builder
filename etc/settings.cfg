# DO NOT EDIT THIS FILE !
#
# CREATE AND USE A COPY: cp etc/settings.cfg etc/user.cfg

########################
### GENERAL SETTINGS ###
########################

# TIMEZONE (e.g. "America/NewYork")
# To set the time in your timezone.
# Will be auto-detected when this
# option is set to:  "default"
# =================================
TIMEZONE="default"

# BUILDER NAME (displayed in proc/version)
# The output of `whoami` will be used
# when this option is set to:  "default"
# ========================================
BUILDER="default"

# BUILDER HOST (displayed in proc/version)
# The output of `hostname` will be used
# when this option is set to:  "default"
# ========================================
HOST="default"

# TELEGRAM API CONFIGURATION
# Who the F* wants to get real time kernel build
# status with ZIP sending in Telegram group or channel?
# =====================================================
TELEGRAM_CHAT_ID=""
TELEGRAM_BOT_TOKEN=""


#######################
### DEVICE SETTINGS ###
#######################

# KERNEL NAME
# Name of your kernel
# ===================
TAG="ZenMax"

# KERNEL VARIANT
# Stable | CAF | ZMB
# ==================
KERNEL_VARIANT="ZMB"

# TARGET ARCHITECTURE
# arm | arm64 | x86_64
# ====================
ARCH="arm64"

# DEVICE CODENAME (e.g. "X00TD")
# The question will be asked by the script
# when this option is set to:  "default"
# ========================================
CODENAME="default"

# ANDROID KERNEL DIRECTORY
# The question will be asked by the script
# when this option is set to:  "default"
# ========================================
KERNEL_DIR="default"

# TOOLCHAIN COMPILER
# The question will be asked by the script
# when this option is set to:  "default"
# Proton-Clang | Eva-GCC | Proton-GCC | Lineage-GCC
# =================================================
COMPILER="default"


##########################
### TOOLCHAIN SETTINGS ###
##########################
#
# DO NO EDIT THIS PART WHEN NO SURE !
# DO NOT CHANGE OPTIONS LIST ORDER !

# Proton-Clang Settings
# =====================
PROTON_CLANG_NAME="Proton-Clang"
PROTON_CLANG_PATH="${PROTON_DIR}/bin"
PROTON_CLANG_OPTIONS=(
    SUBARCH=$ARCH
    CROSS_COMPILE="aarch64-linux-gnu-"
    CROSS_COMPILE_ARM32="arm-linux-gnueabi-"
    CC="clang"
    AR="aarch64-linux-gnu-ar"
    AS="aarch64-linux-gnu-as"
    NM="aarch64-linux-gnu-nm"
    LD="aarch64-linux-gnu-ld"
    STRIP="aarch64-linux-gnu-strip"
    OBJCOPY="aarch64-linux-gnu-objcopy"
    OBJDUMP="aarch64-linux-gnu-objdump"
    OBJSIZE="aarch64-linux-gnu-size"
    READELF="aarch64-linux-gnu-readelf"
    HOSTCC="clang"
    HOSTCXX="clang++"
    HOSTAR="aarch64-linux-gnu-ar"
    CLANG_TRIPLE="aarch64-linux-gnu-")

# Proton-GCC Settings
# ===================
PROTON_GCC_NAME="Proton-GCC"
PROTON_GCC_PATH="${PROTON_DIR}/bin:${GCC_ARM64_DIR}/bin:${GCC_ARM_DIR}/bin"
PROTON_GCC_OPTIONS=(
    SUBARCH=$ARCH
    CROSS_COMPILE="aarch64-linux-gnu-"
    CROSS_COMPILE_ARM32="arm-linux-gnueabi-"
    CC="clang"
    AR="llvm-ar"
    AS="llvm-as"
    NM="llvm-nm"
    LD="aarch64-linux-gnu-ld"
    STRIP="llvm-strip"
    OBJCOPY="llvm-objcopy"
    OBJDUMP="llvm-objdump"
    OBJSIZE="llvm-size"
    READELF="llvm-readelf"
    HOSTCC="clang"
    HOSTCXX="clang++"
    HOSTAR="llvm-ar"
    CLANG_TRIPLE="aarch64-linux-gnu-")

# Eva-GCC Settings
# ================
EVA_GCC_NAME="Eva-GCC"
EVA_GCC_PATH="${GCC_ARM64_DIR}/bin:${GCC_ARM_DIR}/bin"
EVA_GCC_OPTIONS=(
    SUBARCH=$ARCH
    CROSS_COMPILE="aarch64-elf-"
    CROSS_COMPILE_ARM32="arm-eabi-"
    CC="aarch64-elf-gcc"
    AR="aarch64-elf-ar"
    AS="aarch64-elf-as"
    NM="aarch64-elf-nm"
    LD="aarch64-elf-ld"
    STRIP="aarch64-elf-strip"
    OBJCOPY="aarch64-elf-objcopy"
    OBJDUMP="aarch64-elf-objdump"
    OBJSIZE="aarch64-elf-size"
    READELF="aarch64-elf-readelf"
    HOSTCC="aarch64-elf-gcc"
    HOSTCXX="aarch64-elf-g++"
    HOSTAR="aarch64-elf-ar")

# Lineage-GCC Settings
# ====================
LOS_GCC_NAME="Lineage-GCC"
LOS_GCC_PATH="${LOS_ARM64_DIR}/bin:${LOS_ARM_DIR}/bin"
LOS_GCC_OPTIONS=(
    SUBARCH=$ARCH
    CROSS_COMPILE="aarch64-linux-android-"
    CROSS_COMPILE_ARM32="arm-linux-android-eabi-"
    CC="aarch64-linux-android-gcc"
    AR="aarch64-linux-android-ar"
    AS="aarch64-linux-android-as"
    LD="aarch64-linux-android-ld"
    NM="aarch64-linux-android-nm"
    STRIP="aarch64-linux-android-strip"
    OBJCOPY="aarch64-linux-android-objcopy"
    OBJDUMP="aarch64-linux-android-objdump"
    OBJSIZE="aarch64-linux-android-size"
    READELF="aarch64-linux-android-readelf"
    HOSTCC="aarch64-linux-android-gcc"
    HOSTCXX="aarch64-linux-android-g++"
    HOSTAR="aarch64-linux-android-ar")

# ANDROID GLOBAL VERSION
# This setting is optional but it
# could be required by some kernels
# =================================
PLATFORM_VERSION=""
ANDROID_MAJOR_VERSION=""

# Link Time Optimization (LTO)
# ============================
LTO="False"
LTO_LIBRARY="ld.lld"
LTO_LIBRARY_DIR="${PROTON_DIR}/lib"

# Kernel init.spectrum.rc
# =======================
SPECTRUM="init.spectrum.rc"

# LLVM Library
# ============
LLVM=1


#########################
### ADVANCED SETTINGS ###
#########################
#
# DO NOT EDIT THIS PART WHEN NOT SURE !

# Some required dependencies
# Be carefull adding some deps, they are checked
# with "which" bash in-built. Changes like variables
# replacement may be required in "src/requirements.sh".
# =====================================================
DEPENDENCIES=(git zip llvm lld clang expect)

# ZenMaxBuilder branch
# Change this if you are using
# your own ZenMaxBuilder fork.
# ================================
ZMB_BRANCH="zmb"

# AnyKernel repo
# Change this if you are using
# your own AnyKernel repository.
# ==============================
ANYKERNEL_DIR="AnyKernel"
ANYKERNEL_URL="https://github.com/grm34/AnyKernel3.git"
ANYKERNEL_BRANCH="ZenMaxBuilder"

# Proton-Clang repo
# Change this if you are using
# your own Clang toolchain repository.
# ====================================
PROTON_DIR="${PWD}/toolchains/proton_clang"
PROTON_URL="https://github.com/kdrag0n/proton-clang.git"
PROTON_BRANCH="master"
PROTON_VERSION="${PROTON_DIR}/lib/clang"

# Eva-GCC ARM64 repo
# Change this if you are using
# your own GCC ARM64 repository.
# ==============================
GCC_ARM64_DIR="${PWD}/toolchains/gcc_arm64"
GCC_ARM64_URL="https://github.com/mvaisakh/gcc-arm64.git"
GCC_ARM64_BRANCH="gcc-master"
GCC_ARM64_VERSION="${GCC_ARM64_DIR}/lib/gcc/aarch64-elf"

# Eva-GCC ARM32 repo
# Change this if you are using
# your own GCC ARM32 repository.
# ==============================
GCC_ARM_DIR="${PWD}/toolchains/gcc_arm"
GCC_ARM_URL="https://github.com/mvaisakh/gcc-arm.git"
GCC_ARM_BRANCH="gcc-master"
GCC_ARM_VERSION="${GCC_ARM_DIR}/lib/gcc/arm-eabi"

# Lineage-GCC ARM64 repo
# Change this if you are using
# your own GCC ARM64 repository.
# ==============================
LOS_ARM64_DIR="${PWD}/toolchains/los_arm64"
LOS_ARM64_URL="https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_aarch64_aarch64-linux-android-4.9.git"
LOS_ARM64_BRANCH="lineage-19.1"
LOS_ARM64_VERSION="${LOS_ARM64_DIR}/lib/gcc/aarch64-linux-android"

# Lineage-GCC ARM32 repo
# Change this if you are using
# your own GCC ARM32 repository.
# ==============================
LOS_ARM_DIR="${PWD}/toolchains/los_arm"
LOS_ARM_URL="https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_arm_arm-linux-androideabi-4.9.git"
LOS_ARM_BRANCH="lineage-19.1"
LOS_ARM_VERSION="${GCC_ARM_DIR}/lib/gcc/arm-linux-androideabi"

# Linux Stable repo
# To get latest stable tag.
# =========================
LINUX_STABLE="https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git"

