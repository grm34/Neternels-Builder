# WARNING: do not edit this file !
# Use a copy: cp etc/settings.cfg etc/user.cfg

###--------------------------------------------------------------###
###                     ZMB GENERAL SETTINGS                     ###
###--------------------------------------------------------------###

# REQUIREMENTS
# The installation of the missing dependencies will be offered.
# In case of problems with a package you can disable this process
# ================================================================
AUTO_DEPENDENCIES="True"

# EDITOR
# Use your favorite text editor to edit Makefile
# ===============================================
EDITOR="vi"

# LANGUAGE
# Your language will be used by default if already translated.
# To force another language use the corresponding language code
# ==============================================================
LANGUAGE="default"

# TIMEZONE (e.g. "America/NewYork")
# To set the time in your timezone
# Auto-detected while set to: "default"
# ======================================
TIMEZONE="default"

# BUILDER NAME (displayed in proc/version)
# The output of <whoami> will be used while set to: "default"
# ============================================================
BUILDER="default"

# BUILDER HOST (displayed in proc/version)
# The output of <hostname> will be used while set to: "default"
# =============================================================
HOST="default"

# TELEGRAM API CONFIGURATION (hello @BotFather)
# Who the F* wants to get real time kernel build
# status with ZIP sending in Telegram group or channel?
# ======================================================
TELEGRAM_CHAT_ID=""
TELEGRAM_BOT_TOKEN=""
TELEGRAM_API="https://api.telegram.org"


###--------------------------------------------------------------###
###                   ANDROID DEVICE SETTINGS                    ###
###--------------------------------------------------------------###

# KERNEL TAG
# The name of your kernel
# ========================
TAG="ZenMax"

# KERNEL VARIANT
# Stable | ZMB | Nethunter
# =========================
KERNEL_VARIANT="ZMB"

# TARGET ARCHITECTURE
# arm64 | x86_64 | x86
# =====================
ARCH="arm64"

# DEVICE CODENAME (e.g. "X00TD")
# The question will be asked while set to: "default"
# ===================================================
CODENAME="default"

# ANDROID KERNEL DIRECTORY
# The question will be asked while set to: "default"
# ===================================================
KERNEL_DIR="default"

# TOOLCHAIN COMPILER
# The question will be asked while set to: "default"
# AOSP-Clang | Eva-GCC | Proton-Clang | Proton-GCC
# Neutron-Clang | Neutron-GCC | Lineage-GCC | Host-Clang
# =======================================================
COMPILER="default"

# ANDROID VERSION
# This setting is optional but it could be required
# by some kernels. This will be exported while not
# found in Makefile or while IGNORE_MAKEFILE is True
# ===================================================
IGNORE_MAKEFILE="False"
PLATFORM_VERSION="10"
ANDROID_MAJOR_VERSION="q"

# FILES TO BE INCLUDED in the KERNEL ZIP
# They will be added to AK3 while they are found
# in the kernel compilation BOOT folder, which is:
#  ==> ZenMaxBuilder/out/<codename>/arch/<arch>/boot
# ===================================================
INCLUDED=(init.spectrum.rc dtbo.img dts/qcom/sm8150-v2.dtb dts/qcom/sm8150-erofs.dtb)


###--------------------------------------------------------------###
###    TOOLCHAINS SETTINGS: do not edit if you are not sure !    ###
###--------------------------------------------------------------###

# LINKER CHECK
# Ensure host supports selected toolchain
# ========================================
HOST_LINKER="True"

# LINK TIME OPTIMIZATION (LTO)
# Make sure to use a compatible compiler
# WARNING: LTO_LIBRARY will be used as LD
# ========================================
LTO="False"
LTO_LIBRARY="ld.lld"

# LLVM/CLANG FLAGS
# Make sure to use a compatible compiler
# =======================================
LLVM_FLAGS="False"
LLVM=1
LLVM_IAS=1

# MAKE COMMAND-LINE ARGUMENTS
# The toolchains settings defined below will
# be passed to make as command-line arguments
# ============================================
MAKE_CMD_ARGS="True"

# AOSP-CLANG SETTINGS
# ? AOSP Clang/LLVM prebuilts
# You can append desired options but:
# DO NOT CHANGE THE OPTIONS LIST ORDER !
# =======================================
AOSP_CLANG_NAME="AOSP-Clang"
AOSP_CLANG_OPTIONS=(
  SUBARCH=$ARCH
  CROSS_COMPILE="aarch64-linux-android-"
  CROSS_COMPILE_ARM32="arm-linux-androideabi-"
  CC="clang"
  AR="llvm-ar"
  AS="llvm-as"
  NM="llvm-nm"
  LD="aarch64-linux-android-ld"
  STRIP="aarch64-linux-android-strip"
  OBJCOPY="llvm-objcopy"
  OBJDUMP="llvm-objdump"
  OBJSIZE="llvm-size"
  READELF="aarch64-linux-android-readelf"
  HOSTCC="clang"
  HOSTCXX="clang++"
  HOSTAR="llvm-ar"
  CLANG_TRIPLE="aarch64-linux-gnu-")

# EVA-GCC SETTINGS
# ? Bleeding Edge Bare Metal GCC
# You can append desired options but:
# DO NOT CHANGE THE OPTIONS LIST ORDER !
# =======================================
EVA_GCC_NAME="Eva-GCC"
EVA_GCC_OPTIONS=(
  SUBARCH=$ARCH
  CROSS_COMPILE="aarch64-elf-"
  CROSS_COMPILE_ARM32="arm-eabi-"
  CC="aarch64-elf-gcc"
  AR="aarch64-elf-ar"
  AS="aarch64-elf-as"
  NM="aarch64-elf-nm"
  LD="aarch64-elf-ld"
  STRIP="aarch64-elf-strip"
  OBJCOPY="aarch64-elf-objcopy"
  OBJDUMP="aarch64-elf-objdump"
  OBJSIZE="aarch64-elf-size"
  READELF="aarch64-elf-readelf"
  HOSTCC="aarch64-elf-gcc"
  HOSTCXX="aarch64-elf-g++"
  HOSTAR="aarch64-elf-ar")

# NEUTRON-CLANG SETTINGS
# ? Bleeding Edge Bare Metal LLVM
# You can append desired options but:
# DO NOT CHANGE THE OPTIONS LIST ORDER !
# =======================================
NEUTRON_CLANG_NAME="Neutron-Clang"
NEUTRON_CLANG_OPTIONS=(
  SUBARCH=$ARCH
  CROSS_COMPILE="aarch64-linux-gnu-"
  CROSS_COMPILE_ARM32="arm-linux-gnueabi-"
  CC="clang"
  AR="aarch64-linux-gnu-ar"
  AS="aarch64-linux-gnu-as"
  NM="aarch64-linux-gnu-nm"
  LD="aarch64-linux-gnu-ld"
  STRIP="aarch64-linux-gnu-strip"
  OBJCOPY="aarch64-linux-gnu-objcopy"
  OBJDUMP="aarch64-linux-gnu-objdump"
  OBJSIZE="aarch64-linux-gnu-size"
  READELF="aarch64-linux-gnu-readelf"
  HOSTCC="clang"
  HOSTCXX="clang++"
  HOSTAR="aarch64-linux-gnu-ar"
  CLANG_TRIPLE="aarch64-linux-gnu-")

# PROTON-CLANG SETTINGS
# ? Clang/LLVM prebuilts by kdrag0n
# You can append desired options but:
# DO NOT CHANGE THE OPTIONS LIST ORDER !
# =======================================
PROTON_CLANG_NAME="Proton-Clang"
PROTON_CLANG_OPTIONS=(
  SUBARCH=$ARCH
  CROSS_COMPILE="aarch64-linux-gnu-"
  CROSS_COMPILE_ARM32="arm-linux-gnueabi-"
  CC="clang"
  AR="aarch64-linux-gnu-ar"
  AS="aarch64-linux-gnu-as"
  NM="aarch64-linux-gnu-nm"
  LD="aarch64-linux-gnu-ld"
  STRIP="aarch64-linux-gnu-strip"
  OBJCOPY="aarch64-linux-gnu-objcopy"
  OBJDUMP="aarch64-linux-gnu-objdump"
  OBJSIZE="aarch64-linux-gnu-size"
  READELF="aarch64-linux-gnu-readelf"
  HOSTCC="clang"
  HOSTCXX="clang++"
  HOSTAR="aarch64-linux-gnu-ar"
  CLANG_TRIPLE="aarch64-linux-gnu-")

# LINEAGE-GCC SETTINGS
# ? LineageOS GCC prebuilts
# You can append desired options but:
# DO NOT CHANGE THE OPTIONS LIST ORDER !
# =======================================
LOS_GCC_NAME="Lineage-GCC"
LOS_GCC_OPTIONS=(
  SUBARCH=$ARCH
  CROSS_COMPILE="aarch64-linux-android-"
  CROSS_COMPILE_ARM32="arm-linux-android-eabi-"
  CC="aarch64-linux-android-gcc"
  AR="aarch64-linux-android-ar"
  AS="aarch64-linux-android-as"
  LD="aarch64-linux-android-ld"
  NM="aarch64-linux-android-nm"
  STRIP="aarch64-linux-android-strip"
  OBJCOPY="aarch64-linux-android-objcopy"
  OBJDUMP="aarch64-linux-android-objdump"
  OBJSIZE="aarch64-linux-android-size"
  READELF="aarch64-linux-android-readelf"
  HOSTCC="aarch64-linux-android-gcc"
  HOSTCXX="aarch64-linux-android-g++"
  HOSTAR="aarch64-linux-android-ar")

# NEUTRON-GCC SETTINGS
# ? Neutron-Clang vs Eva-GCC prebuilts
# You can append desired options but:
# DO NOT CHANGE THE OPTIONS LIST ORDER !
# =======================================
NEUTRON_GCC_NAME="Neutron-GCC"
NEUTRON_GCC_OPTIONS=(
  SUBARCH=$ARCH
  CROSS_COMPILE="aarch64-linux-gnu-"
  CROSS_COMPILE_ARM32="arm-linux-gnueabi-"
  CC="clang"
  AR="llvm-ar"
  AS="llvm-as"
  NM="llvm-nm"
  LD="aarch64-linux-gnu-ld"
  STRIP="llvm-strip"
  OBJCOPY="llvm-objcopy"
  OBJDUMP="llvm-objdump"
  OBJSIZE="llvm-size"
  READELF="llvm-readelf"
  HOSTCC="clang"
  HOSTCXX="clang++"
  HOSTAR="llvm-ar"
  CLANG_TRIPLE="aarch64-linux-gnu-")

# PROTON-GCC SETTINGS
# ? Proton-Clang vs Eva-GCC prebuilts
# You can append desired options but:
# DO NOT CHANGE THE OPTIONS LIST ORDER !
# =======================================
PROTON_GCC_NAME="Proton-GCC"
PROTON_GCC_OPTIONS=(
  SUBARCH=$ARCH
  CROSS_COMPILE="aarch64-linux-gnu-"
  CROSS_COMPILE_ARM32="arm-linux-gnueabi-"
  CC="clang"
  AR="llvm-ar"
  AS="llvm-as"
  NM="llvm-nm"
  LD="aarch64-linux-gnu-ld"
  STRIP="llvm-strip"
  OBJCOPY="llvm-objcopy"
  OBJDUMP="llvm-objdump"
  OBJSIZE="llvm-size"
  READELF="llvm-readelf"
  HOSTCC="clang"
  HOSTCXX="clang++"
  HOSTAR="llvm-ar"
  CLANG_TRIPLE="aarch64-linux-gnu-")

# HOST-CLANG SETTINGS
# ? System host Clang/LLVM...
# You can append desired options but:
# DO NOT CHANGE THE OPTIONS LIST ORDER !
# =======================================
HOST_CLANG_NAME="Host-Clang"
HOST_CLANG_OPTIONS=(
  SUBARCH=$ARCH
  CROSS_COMPILE="aarch64-linux-gnu-"
  CROSS_COMPILE_ARM32="arm-none-eabi-"
  CC="clang"
  AR="aarch64-linux-gnu-ar"
  AS="aarch64-linux-gnu-as"
  NM="aarch64-linux-gnu-nm"
  LD="aarch64-linux-gnu-ld"
  STRIP="aarch64-linux-gnu-strip"
  OBJCOPY="aarch64-linux-gnu-objcopy"
  OBJDUMP="aarch64-linux-gnu-objdump"
  OBJSIZE="aarch64-linux-gnu-size"
  READELF="aarch64-linux-gnu-readelf"
  HOSTCC="clang"
  HOSTCXX="clang++"
  HOSTAR="aarch64-linux-gnu-ar"
  CLANG_TRIPLE="aarch64-linux-gnu-")


###--------------------------------------------------------------###
###     ADVANCED SETTINGS: do not edit if you are not sure !     ###
###--------------------------------------------------------------###

# AK3 BANNER
# ZMB Banner from <docs/ak3/banner>
# You can use yours or simply deactivate.
# ========================================
AK3_BANNER="True"
AK3_BANNER_FILE="docs/ak3/banner"

# OPERATING SYSTEM REQUIREMENTS
# Be carefull adding some deps, they are checked
# with <which> Linux built-in. Changes like variables
# replacement may be required (see INSTALLER section).
# WARNING: GCC will not be installed on TERMUX (not fully supported)
# ===================================================================
DEPENDENCIES=(bash sed wget git curl zip tar expect make cmake automake autoconf llvm lld lldb clang gcc binutils bison perl gperf gawk flex bc python3 zstd openssl)

# ZENMAXBUILDER
# Change this if you are using your own ZenMaxBuilder fork
# =========================================================
ZMB_BRANCH="zmb"

# ANYKERNEL3
# Fork of osm0sis (updated every 15min)
# Change this if you are using your own AK3 repository
# WARNING: the repo will be cloned to the <ZenMaxBuilder> folder
# (while not found). You have to set variables in that way
# and rename/move to the <ZenMaxBuilder> folder if you already have it
# =====================================================================
ANYKERNEL_DIR="AnyKernel"
ANYKERNEL_URL="https://github.com/grm34/AnyKernel3.git"
ANYKERNEL_BRANCH="ZenMaxBuilder"

# NEUTRON-CLANG
# Prebuilts by dakkshesh07 (gitlab)
# Change this if you are using your own CLANG toolchain
# WARNING: the repo will be cloned to the <toolchains> folder
# (while not found). You have to set variables in that way
# and rename/move to the <toolchains> folder if you already have it
# ==================================================================
NEUTRON_DIR="neutron-clang"
NEUTRON_URL="https://gitlab.com/dakkshesh07/neutron-clang.git"
NEUTRON_BRANCH="Neutron-15"
NEUTRON_VERSION="neutron-clang/lib/clang"
NEUTRON_CHECK="neutron-clang/bin/clang-15"

# PROTON-CLANG
# Fork of kdrag0n (updated every 15min)
# Change this if you are using your own CLANG toolchain
# WARNING: the repo will be cloned to the <toolchains> folder
# (while not found). You have to set variables in that way
# and rename/move to the <toolchains> folder if you already have it
# ==================================================================
PROTON_DIR="proton-clang"
PROTON_URL="https://github.com/grm34/proton-clang.git"
PROTON_BRANCH="ZenMaxBuilder"
PROTON_VERSION="proton-clang/lib/clang"
PROTON_CHECK="proton-clang/bin/clang"

# EVA GCC-ARM64
# Fork of mvaisakh (updated every 15min)
# Change this if you are using your own GCC ARM64 toolchain
# WARNING: the repo will be cloned to the <toolchains> folder
# (while not found). You have to set variables in that way
# and rename/move to the <toolchains> folder if you already have it
# ==================================================================
EVA_ARM64_DIR="eva-arm64"
EVA_ARM64_URL="https://github.com/grm34/gcc-arm64.git"
EVA_ARM64_BRANCH="ZenMaxBuilder"
EVA_ARM64_VERSION="eva-arm64/lib/gcc/aarch64-elf"
EVA_ARM64_CHECK="eva-arm64/bin/aarch64-elf-gcc"

# EVA GCC-ARM
# Fork of mvaisakh (updated every 15min)
# Change this if you are using your own GCC ARM toolchain
# WARNING: the repo will be cloned to the <toolchains> folder
# (while not found). You have to set variables in that way
# and rename/move to the <toolchains> folder if you already have it
# ==================================================================
EVA_ARM_DIR="eva-arm"
EVA_ARM_URL="https://github.com/grm34/gcc-arm.git"
EVA_ARM_BRANCH="ZenMaxBuilder"
EVA_ARM_VERSION="eva-arm/lib/gcc/arm-eabi"
EVA_ARM_CHECK="eva-arm/bin/arm-eabi-gcc"

# LOS GCC-ARM64
# Fork of LineageOS (updated every 15min)
# Change this if you are using your own GCC ARM64 toolchain
# WARNING: the repo will be cloned to the <toolchains> folder
# (while not found). You have to set variables in that way
# and rename/move to the <toolchains> folder if you already have it
# ==================================================================
LOS_ARM64_DIR="los-arm64"
LOS_ARM64_URL="https://github.com/grm34/android_prebuilts_gcc_linux-x86_aarch64_aarch64-linux-android-4.9.git"
LOS_ARM64_BRANCH="ZenMaxBuilder"
LOS_ARM64_VERSION="los-arm64/lib/gcc/aarch64-linux-android"
LOS_ARM64_CHECK="los-arm64/bin/real-aarch64-linux-android-gcc"

# LOS GCC-ARM
# Fork of LineageOS (updated every 15min)
# Change this if you are using your own GCC ARM toolchain
# WARNING: the repo will be cloned to the <toolchains> folder
# (while not found). You have to set variables in that way
# and rename/move to the <toolchains> folder if you already have it
# ==================================================================
LOS_ARM_DIR="los-arm"
LOS_ARM_URL="https://github.com/grm34/android_prebuilts_gcc_linux-x86_arm_arm-linux-androideabi-4.9.git"
LOS_ARM_BRANCH="ZenMaxBuilder"
LOS_ARM_VERSION="los-arm/lib/gcc/arm-linux-androideabi"
LOS_ARM_CHECK="los-arm/bin/real-arm-linux-androideabi-gcc"

# AOSP CLANG
# The latest tag will always be used as default
# Change this if you are using your own Clang toolchain
# WARNING: the archive will be extracted to the <toolchains> folder
# (while not found). You have to set variables in that way
# and rename/move to the <toolchains> folder if you already have it
# ==================================================================
AOSP_CLANG_DIR="aosp-clang"
AOSP_CLANG_URL="https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+/refs/heads/master"
AOSP_CLANG_BRANCH="master"
AOSP_CLANG_VERSION="aosp-clang/AndroidVersion.txt"
AOSP_CLANG_CHECK="aosp-clang/bin/clang-check"

# LLVM ARM64
# The latest tag will always be used as default
# Change this if you are using your own LLVM toolchain
# WARNING: the archive will be extracted to the <toolchains> folder
# (while not found). You have to set variables in that way
# and rename/move to the <toolchains> folder if you already have it
# ==================================================================
LLVM_ARM64_DIR="llvm-arm64"
LLVM_ARM64_URL="https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/+refs"
LLVM_ARM64_BRANCH="master"
LLVM_ARM64_VERSION="llvm-arm64/AndroidVersion.txt"
LLVM_ARM64_CHECK="llvm-arm64/bin/aarch64-linux-android-gcc-ar"

# LLVM ARM
# The latest tag will always be used as default
# Change this if you are using your own LLVM toolchain
# WARNING: the archive will be extracted to the <toolchains> folder
# (while not found). You have to set variables in that way
# and rename/move to the <toolchains> folder if you already have it
# ==================================================================
LLVM_ARM_DIR="llvm-arm"
LLVM_ARM_URL="https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9/+refs"
LLVM_ARM_BRANCH="master"
LLVM_ARM_VERSION="llvm-arm/AndroidVersion.txt"
LLVM_ARM_CHECK="llvm-arm/bin/arm-linux-androideabi-gcc-ar"

# LINUX STABLE
# To get the latest Linux Stable tag
# ===================================
LINUX_STABLE="https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git"

