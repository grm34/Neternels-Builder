# DO NOT EDIT THIS FILE !!!
# CREATE AND USE A COPY:      cp etc/settings.cfg etc/user.cfg

###--------------------------------------------------------------###
###                    ZMB GENERAL SETTINGS                      ###
###--------------------------------------------------------------###

# REQUIREMENTS
# The installation of the missing dependencies will be offered.
# In case of problems with a package you can disable this process.
# ================================================================
AUTO_DEPENDENCIES="True"

# TIMEZONE (e.g. "America/NewYork")
# To set the time in your timezone.
# Auto-detected while set to: <default>
# =====================================
TIMEZONE="default"

# BUILDER NAME (displayed in proc/version)
# The output of <whoami> will be used while set to: <default>
# ===========================================================
BUILDER="default"

# BUILDER HOST (displayed in proc/version)
# The output of <hostname> will be used while set to: <default>
# ============================================================
HOST="default"

# TELEGRAM API CONFIGURATION (hello @BotFather)
# Who the F* wants to get real time kernel build
# status with ZIP sending in Telegram group or channel?
# =====================================================
TELEGRAM_CHAT_ID=""
TELEGRAM_BOT_TOKEN=""
TELEGRAM_API="https://api.telegram.org"


###--------------------------------------------------------------###
###                   ANDROID DEVICE SETTINGS                    ###
###--------------------------------------------------------------###

# KERNEL TAG
# The name of your kernel
# =======================
TAG="ZenMax"

# KERNEL VARIANT
# Stable | ZMB | Nethunter
# ========================
KERNEL_VARIANT="ZMB"

# TARGET ARCHITECTURE
# arm64 | x86_64 | x86
# ====================
ARCH="arm64"

# DEVICE CODENAME (e.g. "X00TD")
# The question will be asked while set to: <default>
# ==================================================
CODENAME="default"

# ANDROID KERNEL DIRECTORY
# The question will be asked while set to: <default>
# ==================================================
KERNEL_DIR="default"

# TOOLCHAIN COMPILER
# The question will be asked while set to: <default>
# Proton-Clang | Eva-GCC | Proton-GCC | Lineage-GCC
# ==================================================
COMPILER="default"

# ANDROID VERSION
# This setting is optional but it
# could be required by some kernels
# =================================
PLATFORM_VERSION="10"
ANDROID_MAJOR_VERSION="q"

# FILES TO BE INCLUDED in the KERNEL ZIP
# Those files will be added in AK3 while they are
# found in the kernel compilation BOOT folder, which is:
#  ==> ZenMaxBuilder/out/<codename>/arch/<arch>/boot
# ======================================================
INCLUDED=(init.spectrum.rc dtbo.img dts/qcom/sm8150-v2.dtb dts/qcom/sm8150-erofs.dtb)


###--------------------------------------------------------------###
###   TOOLCHAINS SETTINGS: DO NOT EDIT THIS PART WHEN NO SURE !  ###
###--------------------------------------------------------------###

# LINK TIME OPTIMIZATION (LTO)
# Set this setting to True to use LTO.
# Make sure to use a compatible compiler
# and make sure it's configured to use LTO.
# =========================================
LTO="False"
LTO_LIBRARY="ld.lld"

# PROTON-CLANG SETTINGS
# You can append desired opt but:
# DO NOT CHANGE OPTIONS LIST ORDER !
# ==================================
PROTON_CLANG_NAME="Proton-Clang"
PROTON_CLANG_OPTIONS=(
  SUBARCH=$ARCH
  CROSS_COMPILE="aarch64-linux-gnu-"
  CROSS_COMPILE_ARM32="arm-linux-gnueabi-"
  CC="clang"
  AR="aarch64-linux-gnu-ar"
  AS="aarch64-linux-gnu-as"
  NM="aarch64-linux-gnu-nm"
  LD="aarch64-linux-gnu-ld"
  STRIP="aarch64-linux-gnu-strip"
  OBJCOPY="aarch64-linux-gnu-objcopy"
  OBJDUMP="aarch64-linux-gnu-objdump"
  OBJSIZE="aarch64-linux-gnu-size"
  READELF="aarch64-linux-gnu-readelf"
  HOSTCC="clang"
  HOSTCXX="clang++"
  HOSTAR="aarch64-linux-gnu-ar"
  CLANG_TRIPLE="aarch64-linux-gnu-")

# PROTON-GCC SETTINGS
# You can append desired opt but:
# DO NOT CHANGE OPTIONS LIST ORDER !
# ==================================
PROTON_GCC_NAME="Proton-GCC"
PROTON_GCC_OPTIONS=(
  SUBARCH=$ARCH
  CROSS_COMPILE="aarch64-linux-gnu-"
  CROSS_COMPILE_ARM32="arm-linux-gnueabi-"
  CC="clang"
  AR="llvm-ar"
  AS="llvm-as"
  NM="llvm-nm"
  LD="aarch64-linux-gnu-ld"
  STRIP="llvm-strip"
  OBJCOPY="llvm-objcopy"
  OBJDUMP="llvm-objdump"
  OBJSIZE="llvm-size"
  READELF="llvm-readelf"
  HOSTCC="clang"
  HOSTCXX="clang++"
  HOSTAR="llvm-ar"
  CLANG_TRIPLE="aarch64-linux-gnu-")

# EVA-GCC SETTINGS
# You can append desired opt but:
# DO NOT CHANGE OPTIONS LIST ORDER !
# ==================================
EVA_GCC_NAME="Eva-GCC"
EVA_GCC_OPTIONS=(
  SUBARCH=$ARCH
  CROSS_COMPILE="aarch64-elf-"
  CROSS_COMPILE_ARM32="arm-eabi-"
  CC="aarch64-elf-gcc"
  AR="aarch64-elf-ar"
  AS="aarch64-elf-as"
  NM="aarch64-elf-nm"
  LD="aarch64-elf-ld"
  STRIP="aarch64-elf-strip"
  OBJCOPY="aarch64-elf-objcopy"
  OBJDUMP="aarch64-elf-objdump"
  OBJSIZE="aarch64-elf-size"
  READELF="aarch64-elf-readelf"
  HOSTCC="aarch64-elf-gcc"
  HOSTCXX="aarch64-elf-g++"
  HOSTAR="aarch64-elf-ar")

# LINEAGE-GCC SETTINGS
# You can append desired opt but:
# DO NOT CHANGE OPTIONS LIST ORDER !
# ==================================
LOS_GCC_NAME="Lineage-GCC"
LOS_GCC_OPTIONS=(
  SUBARCH=$ARCH
  CROSS_COMPILE="aarch64-linux-android-"
  CROSS_COMPILE_ARM32="arm-linux-android-eabi-"
  CC="aarch64-linux-android-gcc"
  AR="aarch64-linux-android-ar"
  AS="aarch64-linux-android-as"
  LD="aarch64-linux-android-ld"
  NM="aarch64-linux-android-nm"
  STRIP="aarch64-linux-android-strip"
  OBJCOPY="aarch64-linux-android-objcopy"
  OBJDUMP="aarch64-linux-android-objdump"
  OBJSIZE="aarch64-linux-android-size"
  READELF="aarch64-linux-android-readelf"
  HOSTCC="aarch64-linux-android-gcc"
  HOSTCXX="aarch64-linux-android-g++"
  HOSTAR="aarch64-linux-android-ar")


###--------------------------------------------------------------###
###    ADVANCED SETTINGS: DO NOT EDIT THIS PART WHEN NO SURE !   ###
###--------------------------------------------------------------###

# OPERATING SYSTEM REQUIREMENTS
# Be carefull adding some deps, they are checked
# with <which> Linux built-in. Changes like variables
# replacement may be required in the REQUIREMENTS section.
# WARNING: GCC will not be installed on TERMUX (not fully supported)
# ==================================================================
DEPENDENCIES=(bash sed wget git curl zip tar expect make cmake automake autoconf llvm lld lldb clang gcc binutils bison perl libtool gperf gawk flex bc python zstd ninja openssl)

# ZENMAXBUILDER
# Change this if you are using your own ZenMaxBuilder fork.
# =========================================================
ZMB_BRANCH="zmb"

# ANYKERNEL3
# Change this if you are using your own AK3 repository.
# WARNING: the repo will be cloned in ZenMaxBuilder folder
# while not found, so you have to set ANYKERNEL_DIR in that way
# and rename and move it in <ZenMaxBuilder> if you already have it.
# =================================================================
ANYKERNEL_DIR="AnyKernel"
ANYKERNEL_URL="https://github.com/grm34/AnyKernel3.git"
ANYKERNEL_BRANCH="ZenMaxBuilder"

# PROTON-CLANG
# Change this if you are using your own Clang repository.
# WARNING: the repo will be cloned in ZMB toolchains folder
# while not found, so you have to set PROTON_DIR in that way
# and rename and move it in <toolchains> if you already have it.
# ==============================================================
PROTON_DIR="proton_clang"
PROTON_URL="https://github.com/kdrag0n/proton-clang.git"
PROTON_BRANCH="master"
PROTON_VERSION="proton_clang/lib/clang"

# EVA GCC-ARM64
# Change this if you are using your own GCC ARM64 repository.
# WARNING: the repo will be cloned in ZMB toolchains folder
# while not found, so you have to set GCC_ARM64_DIR in that way
# and rename and move it in <toolchains> if you already have it.
# ==============================================================
GCC_ARM64_DIR="gcc_arm64"
GCC_ARM64_URL="https://github.com/mvaisakh/gcc-arm64.git"
GCC_ARM64_BRANCH="gcc-master"
GCC_ARM64_VERSION="gcc_arm64/lib/gcc/aarch64-elf"

# EVA GCC-ARM
# Change this if you are using your own GCC ARM repository.
# WARNING: the repo will be cloned in ZMB toolchains folder
# while not found, so you have to set GCC_ARM_DIR in that way
# and rename and move it in <toolchains> if you already have it.
# ==============================================================
GCC_ARM_DIR="gcc_arm"
GCC_ARM_URL="https://github.com/mvaisakh/gcc-arm.git"
GCC_ARM_BRANCH="gcc-master"
GCC_ARM_VERSION="gcc_arm/lib/gcc/arm-eabi"

# LOS GCC-ARM64
# Change this if you are using your own GCC ARM64 repository.
# WARNING: the repo will be cloned in ZMB toolchains folder
# while not found, so you have to set LOS_ARM64_DIR in that way
# and rename and move it in <toolchains> if you already have it.
# ==============================================================
LOS_ARM64_DIR="los_arm64"
LOS_ARM64_URL="https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_aarch64_aarch64-linux-android-4.9.git"
LOS_ARM64_BRANCH="lineage-19.1"
LOS_ARM64_VERSION="los_arm64/lib/gcc/aarch64-linux-android"

# LOS GCC-ARM
# Change this if you are using your own GCC ARM repository.
# WARNING: the repo will be cloned in ZMB toolchains folder
# while not found, so you have to set LOS_ARM_DIR in that way
# and rename and move it in <toolchains> if you already have it.
# ==============================================================
LOS_ARM_DIR="los_arm"
LOS_ARM_URL="https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_arm_arm-linux-androideabi-4.9.git"
LOS_ARM_BRANCH="lineage-19.1"
LOS_ARM_VERSION="los_arm/lib/gcc/arm-linux-androideabi"

# LINUX STABLE
# To get the latest Linux Stable tag.
# ===================================
LINUX_STABLE="https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git"

